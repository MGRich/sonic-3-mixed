<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:theme="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
                    xmlns:local="clr-namespace:TileManiacWPF" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d">
    <ResourceDictionary.MergedDictionaries>
        <local:SkinResourceDictonary LightSource="/TileManiacWPF;component/Themes/LightTheme.xaml" DarkSource="/TileManiacWPF;component/Themes/DarkTheme.xaml"/>
    </ResourceDictionary.MergedDictionaries>
    <SolidColorBrush x:Key="ToolBarLightFill"
      Color="#F7F7FF"/>
    <SolidColorBrush x:Key="ToolBarMediumFill"
      Color="#D6DBE7"/>
    <SolidColorBrush x:Key="ToolBarDarkFill"
      Color="#99CCFF"/>
    <SolidColorBrush x:Key="ToolBarDisabledFill"
      Color="#F7F7F7"/>
    <SolidColorBrush x:Key="ToolBarDisabledBorder"
      Color="#B5B2B5"/>
    <SolidColorBrush x:Key="ToolBarSeparatorFill"
      Color="#C6C7C6"/>
    <SolidColorBrush x:Key="ToolBarButtonHover"
      Color="#C2E0FF"/>
    <SolidColorBrush x:Key="ToolBarButtonHoverBorder"
      Color="#3399FF"/>
    <SolidColorBrush x:Key="ToolBarButtonChecked"
      Color="#E6F0FA"/>
    <SolidColorBrush x:Key="ToolBarButtonPressed"
      Color="#99CCFF"/>
    <SolidColorBrush x:Key="ToolBarButtonPressedBorder"
      Color="#3399FF"/>
    <SolidColorBrush x:Key="ToolBarMenuBorder"
      Color="#808080"/>
    <SolidColorBrush x:Key="ToolBarSubMenuBackground"
      Color="#FDFDFD"/>
    <SolidColorBrush x:Key="ToolBarMenuCheckFill"
      Color="#E6F0FA"/>
    <LinearGradientBrush x:Key="ToolBarOpenHeaderBackground"
       StartPoint="0,0"
       EndPoint="0,1">
        <GradientStop Color="#FFFFFF"
       Offset="0"/>
        <GradientStop Color="#FFFBFF"
       Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ToolBarTrayBackground"
       StartPoint="0,0"
       EndPoint="688,0"
       MappingMode="Absolute">
        <GradientStop Color="#F4F4F4"
       Offset="0"/>
        <GradientStop Color="#FDFDFD"
       Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ToolBarHorizontalBackground"
       StartPoint="0,0"
       EndPoint="0,1">
        <GradientStop Color="#FFFFFF"
       Offset="0"/>
        <GradientStop Color="#FFFBFF"
       Offset="0.5"/>
        <GradientStop Color="#F7F7F7"
       Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ToolBarVerticalBackground"
       StartPoint="0,0"
       EndPoint="1,0">
        <GradientStop Color="#FFFFFF"
       Offset="0"/>
        <GradientStop Color="#FFFBFF"
       Offset="0.5"/>
        <GradientStop Color="#F7F7F7"
       Offset="1"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ToolBarGripper"
      Color="#C6C3C6"/>
    <LinearGradientBrush x:Key="ToolBarToggleButtonHorizontalBackground"
       StartPoint="0,0"
       EndPoint="0,1">
        <GradientStop Color="#ECECEC"
       Offset="0"/>
        <GradientStop Color="#DDDDDD"
       Offset="0.5"/>
        <GradientStop Color="#A0A0A0"
       Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ToolBarToggleButtonVerticalBackground"
       StartPoint="0,0"
       EndPoint="1,0">
        <GradientStop Color="#ECECEC"
       Offset="0"/>
        <GradientStop Color="#DDDDDD"
       Offset="0.5"/>
        <GradientStop Color="#A0A0A0"
       Offset="1"/>
    </LinearGradientBrush>



    <Geometry x:Key="ToolBarCheckmark">M 0,2.5 L 2.5,5 L 7,0.5</Geometry>

    <Style x:Key="ToolBarMainPanelBorderStyle" TargetType="{x:Type Border}">
        <Setter Property="Margin" Value="0,0,0,0" />
        <Setter Property="CornerRadius" Value="3,3,3,3" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Source={x:Static SystemParameters.HighContrast}}" Value="true">
                <Setter Property="CornerRadius" Value="0,0,0,0" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ToolBarThumbStyle"
   TargetType="{x:Type Thumb}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Padding="{TemplateBinding Padding}"
       Background="Transparent"
       SnapsToDevicePixels="True">
                        <Rectangle>
                            <Rectangle.Fill>
                                <DrawingBrush Viewbox="0,0,4,4"
            Viewport="0,0,4,4"
            TileMode="Tile"
            ViewportUnits="Absolute"
            ViewboxUnits="Absolute">
                                    <DrawingBrush.Drawing>
                                        <DrawingGroup>
                                            <GeometryDrawing Brush="White"
                 Geometry="M 1 1 L 1 3 L 3 3 L 3 1 z"/>
                                            <GeometryDrawing Brush="{StaticResource ToolBarGripper}"
                 Geometry="M 0 0 L 0 2 L 2 2 L 2 0 z"/>
                                        </DrawingGroup>
                                    </DrawingBrush.Drawing>
                                </DrawingBrush>
                            </Rectangle.Fill>
                        </Rectangle>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
         Value="true">
                            <Setter Property="Cursor"
         Value="SizeAll"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ToolBarHorizontalOverflowButtonStyle"
   TargetType="{x:Type ToggleButton}">
        <Setter Property="Background"
    Value="Transparent"/>
        <Setter Property="MinHeight"
    Value="0"/>
        <Setter Property="MinWidth"
    Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="Bd"
                            Width="10"                         
       CornerRadius="0,0,0,0"
       Background="{TemplateBinding Background}"
       SnapsToDevicePixels="true">
                        <Canvas
        Margin="5,0,5,0"
        HorizontalAlignment="Right"
        VerticalAlignment="Bottom"
        SnapsToDevicePixels="true">
                            <Line X1="5.5" X2="0" Y1="0" Y2="0"  Stroke="{DynamicResource NormalText}"  Fill="{DynamicResource NormalText}" Margin="-2.7,-13,0,0" />
                            <Polygon Points="-2,0 2,0,0,4"  Stroke="{DynamicResource NormalText}"  Fill="{DynamicResource NormalText}" Margin="0,-10,0,0" />
                        </Canvas>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
         Value="true">
                            <Setter TargetName="Bd"
         Property="Background"
         Value="{DynamicResource ContextMenuSelectedColorBack}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused"
         Value="true">
                            <Setter TargetName="Bd"
         Property="Background"
         Value="{DynamicResource ContextMenuSelectedColorBack}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled"
         Value="false">
                            <Setter Property="Foreground"
         Value="{DynamicResource ContextMenuSelectedColorBack}"/>
                            <Setter Property="Visibility"
          Value="Hidden"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Source={x:Static SystemParameters.HighContrast}}" Value="true">
                <Setter Property="Background" 
      Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="ToolBarVerticalOverflowButtonStyle"
   TargetType="{x:Type ToggleButton}">
        <Setter Property="Background"
    Value="{StaticResource ToolBarToggleButtonVerticalBackground}"/>
        <Setter Property="MinHeight"
    Value="0"/>
        <Setter Property="MinWidth"
    Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="Bd"
       CornerRadius="0,0,9,9"
       Background="{TemplateBinding Background}"
       SnapsToDevicePixels="true">
                        <Canvas Width="21"
        Height="18"
        Margin="6,21,6,6"
        HorizontalAlignment="Right"
        VerticalAlignment="Bottom"
        SnapsToDevicePixels="true">
                            <Path Stroke="White"
         Data="M 4.5 3 L 4.5 18"/>
                            <Path Stroke="{TemplateBinding Foreground}"
         Data="M 1.5 0 L 1.5 15"/>
                            <Path Fill="White"
         Data="M 10.5 1.5 L 21 10.5 L 12 19.5 Z"/>
                            <Path Fill="{TemplateBinding Foreground}"
         Data="M 9 -1.5 L 18 7.5 L 9 16.5 Z"/>
                        </Canvas>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
         Value="true">
                            <Setter TargetName="Bd"
         Property="Background"
         Value="{StaticResource ToolBarButtonHover}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused"
         Value="true">
                            <Setter TargetName="Bd"
         Property="Background"
         Value="{StaticResource ToolBarButtonHover}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled"
         Value="false">
                            <Setter Property="Foreground"
         Value="{StaticResource ToolBarGripper}"/>
                            <Setter Property="Visibility"
          Value="Hidden"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Source={x:Static SystemParameters.HighContrast}}" Value="true">
                <Setter Property="Background" 
      Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{x:Type ToolBar}"
   TargetType="{x:Type ToolBar}">
        <Setter Property="Background" Value="{StaticResource ToolBarHorizontalBackground}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToolBar}">
                    <Grid x:Name="Grid"
      Margin="4,3,1,1"
      SnapsToDevicePixels="true">
                        <Border x:Name="MainPanelBorder"
       Background="{TemplateBinding Background}"
       BorderBrush="{TemplateBinding BorderBrush}"
       BorderThickness="{TemplateBinding BorderThickness}"
       Padding="{TemplateBinding Padding}"
       Style="{StaticResource ToolBarMainPanelBorderStyle}">
                            <DockPanel KeyboardNavigation.TabIndex="1"
         KeyboardNavigation.TabNavigation="Local" Margin="0,0,0.0,1">
                                <Thumb x:Name="ToolBarThumb"
         Style="{StaticResource ToolBarThumbStyle}"
         Margin="-3,-1,0,0"
         Width="10"
         Padding="6,5,1,6"/>
                                <ContentPresenter x:Name="ToolBarHeader"
            ContentSource="Header"
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            Margin="4,0,4,0"
            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                <Grid HorizontalAlignment="Right"
       x:Name="OverflowGrid"
           DockPanel.Dock="Right">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="23*"/>
                                        <RowDefinition Height="10*"/>
                                        <RowDefinition Height="5*"/>
                                    </Grid.RowDefinitions>
                                    <ToggleButton x:Name="OverflowButton"
          FocusVisualStyle="{x:Null}"
          IsEnabled="{TemplateBinding HasOverflowItems}"
          Style="{StaticResource ToolBarHorizontalOverflowButtonStyle}"
          IsChecked="{Binding IsOverflowOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
          ClickMode="Press" Grid.RowSpan="3"/>
                                    <Popup x:Name="OverflowPopup"
        AllowsTransparency="true"
        Placement="Bottom"
        IsOpen="{Binding IsOverflowOpen, RelativeSource={RelativeSource TemplatedParent}}"
        StaysOpen="false"
        Focusable="false"
        PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Grid.RowSpan="3">
                                        <theme:SystemDropShadowChrome x:Name="Shdw"
               Color="Transparent">
                                            <Border Background="{DynamicResource ToolbarBackground}"
          BorderBrush="{StaticResource ToolBarMenuBorder}"
          BorderThickness="1"
          RenderOptions.ClearTypeHint="Enabled"
          x:Name="ToolBarSubMenuBorder">
                                                <ToolBarOverflowPanel x:Name="PART_ToolBarOverflowPanel"
               Margin="2"
               WrapWidth="200"
               Focusable="true" 
               FocusVisualStyle="{x:Null}"
               KeyboardNavigation.TabNavigation="Cycle"
               KeyboardNavigation.DirectionalNavigation="Cycle"
               SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                            </Border>
                                        </theme:SystemDropShadowChrome>
                                    </Popup>
                                </Grid>

                                <ToolBarPanel x:Name="PART_ToolBarPanel"
           IsItemsHost="true"
           Margin="0,1,2,2"
           SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </DockPanel>
                        </Border>

                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsOverflowOpen"
        Value="true">
                            <Setter TargetName="ToolBarThumb"
        Property="IsEnabled"
        Value="false"/>
                        </Trigger>
                        <Trigger Property="Header"
        Value="{x:Null}">
                            <Setter TargetName="ToolBarHeader"
        Property="Visibility"
        Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="ToolBarTray.IsLocked"
        Value="true">
                            <Setter TargetName="ToolBarThumb"
        Property="Visibility"
        Value="Collapsed"/>
                        </Trigger>
                        <Trigger SourceName="OverflowPopup"
        Property="HasDropShadow"
        Value="true">
                            <Setter TargetName="Shdw"
        Property="Margin"
        Value="0,0,5,5"/>
                            <Setter TargetName="Shdw"
        Property="SnapsToDevicePixels"
        Value="true"/>
                            <Setter TargetName="Shdw"
        Property="Color"
        Value="#71000000"/>
                        </Trigger>
                        <Trigger Property="Orientation"
        Value="Vertical">
                            <Setter TargetName="Grid"
        Property="Margin"
        Value="1,3,1,1"/>
                            <Setter TargetName="OverflowButton"
        Property="Style"
        Value="{StaticResource ToolBarVerticalOverflowButtonStyle}"/>
                            <Setter TargetName="ToolBarThumb"
        Property="Height"
        Value="10"/>
                            <Setter TargetName="ToolBarThumb"
        Property="Width"
        Value="Auto"/>
                            <Setter TargetName="ToolBarThumb"
        Property="Margin"
        Value="-1,-3,0,0"/>
                            <Setter TargetName="ToolBarThumb"
        Property="Padding"
        Value="5,6,6,1"/>
                            <Setter TargetName="ToolBarHeader"
        Property="Margin"
        Value="0,0,0,4"/>
                            <Setter TargetName="PART_ToolBarPanel"
        Property="Margin"
        Value="1,0,2,2"/>
                            <Setter TargetName="ToolBarThumb"
        Property="DockPanel.Dock"
        Value="Top"/>
                            <Setter TargetName="ToolBarHeader"
        Property="DockPanel.Dock"
        Value="Top"/>
                            <Setter TargetName="OverflowGrid"
        Property="DockPanel.Dock"
        Value="Bottom"/>
                            <Setter TargetName="OverflowPopup"
        Property="Placement"
        Value="Right"/>
                            <Setter TargetName="MainPanelBorder"
        Property="Margin"
        Value="0,0,0,11"/>
                            <Setter Property="Background"
        Value="{StaticResource ToolBarVerticalBackground}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled"
        Value="false">
                            <Setter Property="Foreground"
        Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Source={x:Static SystemParameters.HighContrast}}" Value="true">
                <Setter Property="Background" 
      Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{x:Type ToolBarTray}" TargetType="{x:Type ToolBarTray}">
        <Setter Property="Background" 
    Value="{StaticResource ToolBarTrayBackground}"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Source={x:Static SystemParameters.HighContrast}}" Value="true">
                <Setter Property="Background" 
      Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>