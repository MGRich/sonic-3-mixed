<Window x:Class="ManiacEditor.Interfaces.GoToPositionBox"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:wpfTool="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:local="clr-namespace:ManiacEditor"
        mc:Ignorable="d"
        Title="Go to..." MinHeight="164" MinWidth="396" ResizeMode="NoResize" Background="{DynamicResource NormalBackground}" Foreground="{DynamicResource NormalText}" Width="504" Height="164">
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition></ColumnDefinition>
            <ColumnDefinition></ColumnDefinition>
            <ColumnDefinition></ColumnDefinition>
            <ColumnDefinition></ColumnDefinition>
            <ColumnDefinition></ColumnDefinition>
            <ColumnDefinition></ColumnDefinition>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition></RowDefinition>
            <RowDefinition></RowDefinition>
        </Grid.RowDefinitions>
        <StackPanel Orientation="Vertical" Grid.Column="0" Grid.ColumnSpan="2" Margin="6" Grid.RowSpan="2">
            <Label Content="X:" Width="46" HorizontalAlignment="Left"></Label>
            <wpfTool:IntegerUpDown Value="0" x:Name="X" Height="20" Width="46" HorizontalAlignment="Left"></wpfTool:IntegerUpDown>
            <CheckBox x:Name="TileModeCheckbox" Content="Tile Mode" Margin="0,20,0,0" HorizontalAlignment="Left"></CheckBox>
            <CheckBox IsEnabled="True" x:Name="SavePositionCheckbox" Content="Save Position" Margin="0,10,0,0" HorizontalAlignment="Left"></CheckBox>
        </StackPanel>
        <StackPanel Orientation="Vertical" Width="46"  Grid.Column="1" Grid.ColumnSpan="2" Margin="6" HorizontalAlignment="Left">
            <Label Content="Y:" HorizontalAlignment="Left"></Label>
            <wpfTool:IntegerUpDown Value="0" x:Name="Y" Height="20" Width="46" HorizontalAlignment="Left"></wpfTool:IntegerUpDown>
        </StackPanel>
        <StackPanel Grid.Column="3" Grid.ColumnSpan="3" Margin="10,0,10,0">
            <Label Content="Saved Points:" Width="85" Margin="-2,0,0,0" HorizontalAlignment="Left"></Label>
            <ComboBox x:Name="SavedPositionsList" SelectionChanged="SavedPositionsList_SelectionChanged" Foreground="{DynamicResource NormalText}" Template="{DynamicResource ComboBoxControlTemplate1}" ></ComboBox>
        </StackPanel>

        <Grid Grid.Column="2" Grid.Row="1" Grid.ColumnSpan="4">
            <Grid.ColumnDefinitions>
                <ColumnDefinition></ColumnDefinition>
                <ColumnDefinition Width="75"></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="26"></RowDefinition>
                <RowDefinition Height="18"></RowDefinition>
            </Grid.RowDefinitions>
            <Label Content="Name: (For Saving...)" Margin="-3,0,0,0" Height="26"></Label>
            <TextBox x:Name="SavedPositionTextBox" Grid.Row="1" Margin="3,0"></TextBox>
            <Button Grid.Row="1" Margin="3,0" Grid.Column="1" Content="GO" Click="button1_Click"></Button>
        </Grid>




    </Grid>
    <Window.Resources>
        <ResourceDictionary>
            <Style TargetType="{x:Type Image}">
                <Style.Triggers>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Opacity" Value="0.4" />
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style TargetType="{x:Type Label}">
                <Setter Property="Foreground" Value="{DynamicResource NormalText}" />
            </Style>
            <Style x:Key="DisabledToggleButton" TargetType="{x:Type ToggleButton}">
                <Style.Triggers>
                    <Trigger Property="IsEnabled" Value="false">
                        <Setter Property="Foreground" Value="{DynamicResource DisabledText}"/>
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="true">
                        <Setter Property="Foreground" Value="{DynamicResource NormalText}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="Flat" x:Name="FlatToggleButtons" TargetType="{x:Type ToggleButton}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <Border HorizontalAlignment="Center" VerticalAlignment="Center" x:Name="border" Padding="5,0,5,0" BorderThickness="1,1,1,1" SnapsToDevicePixels="True">
                                <ContentPresenter x:Name="contentPresenter"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="true">
                                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource ContextMenuSelectedColor}"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Opacity" TargetName="border" Value="0.5"/>
                                    <Setter Property="Opacity" TargetName="contentPresenter" Value="0.5"/>
                                </Trigger>
                                <Trigger Property="Control.IsMouseOver" Value="true">
                                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource ContextMenuSelectedColor}"/>
                                    <Setter Property="Background" TargetName="border" Value="{DynamicResource ContextMenuSelectedColorBack}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style TargetType="{x:Type wpfTool:IntegerUpDown}">
                <Setter Property="Background" Value="{DynamicResource TextBoxBackground}"/>
                <Setter Property="Foreground" Value="{DynamicResource NormalText}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource ButtonBorder}"/>
            </Style>

            <Style x:Key="Flat2" x:Name="FlatButtons" TargetType="{x:Type Button}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border HorizontalAlignment="Center" VerticalAlignment="Center" x:Name="border" Padding="5,0,5,0" BorderThickness="1,1,1,1" SnapsToDevicePixels="True">
                                <ContentPresenter x:Name="contentPresenter"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Opacity" TargetName="border" Value="0.5"/>
                                    <Setter Property="Opacity" TargetName="contentPresenter" Value="0.5"/>
                                </Trigger>
                                <Trigger Property="Control.IsMouseOver" Value="true">
                                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource ContextMenuSelectedColor}"/>
                                    <Setter Property="Background" TargetName="border" Value="{DynamicResource ContextMenuSelectedColorBack}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="RemoveMouseOverEffect" TargetType="Button">
                <Setter Property="OverridesDefaultStyle" Value="True"/>
                <Setter Property="Margin" Value="5"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Name="border" 
                            BorderThickness="1"
                            Padding="0,0" 
                            BorderBrush="Transparent" 
                            CornerRadius="0" 
                            Background="{TemplateBinding Background}">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="border" Property="BorderBrush" Value="Transparent" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </Window.Resources>
</Window>
