<Window x:Class="ManiacEditor.Interfaces.ObjectManager"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ManiacEditor.Interfaces"
        xmlns:maniac="clr-namespace:ManiacEditor"
        mc:Ignorable="d"
        Title="Object Manager" Height="673" Width="653" Background="{DynamicResource NormalBackground}" Closing="ObjectManager_FormClosed" WindowStartupLocation="CenterOwner" ResizeMode="NoResize" ShowInTaskbar="False">
    <Grid>
        <Grid>
            <Grid.ColumnDefinitions>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="24"></RowDefinition>
                <RowDefinition Height="*"></RowDefinition>
            </Grid.RowDefinitions>
            <Menu x:Name="MenuBar" HorizontalAlignment="Stretch" VerticalAlignment="Top" Height="24" Grid.Row="0" Grid.ColumnSpan="5" Background="{DynamicResource MenuBar}" Foreground="{DynamicResource NormalText}">
                <MenuItem x:Name="fileTab" Header="File" VerticalContentAlignment="Center" Margin="7,2,0,0" >
                    <MenuItem Header="Import Objects" Click="importObjectsToolStripMenuItem_Click"></MenuItem>
                    <MenuItem Header="Import Sounds" Click="importSoundsToolStripMenuItem_Click"></MenuItem>
                    <MenuItem Header="Backup Stage Config" Click="backupStageConfigToolStripMenuItem_Click"></MenuItem>
                    <MenuItem Header="Restore Stage Config" IsEnabled="False"></MenuItem>
                </MenuItem>
                <MenuItem x:Name="editTab" Header="Edit" VerticalContentAlignment="Center" Margin="7,2,0,0" >
                    <MenuItem Header="Optimize Object ID Placement" IsEnabled="False"></MenuItem>
                    <MenuItem Header="Add Attribute to All Objects" Click="addAttributeToAllObjectsToolStripMenuItem_Click"></MenuItem>
                </MenuItem>
                <MenuItem x:Name="toolsTab" Header="Tools" VerticalContentAlignment="Center" Margin="7,2,0,0" >
                    <MenuItem Header="MD5 Generator" Click="mD5GeneratorToolStripMenuItem_Click"></MenuItem>
                </MenuItem>
            </Menu>
            <Grid Grid.Row="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition></ColumnDefinition>
                    <ColumnDefinition></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="36"></RowDefinition>
                    <RowDefinition Height="*"></RowDefinition>
                    <RowDefinition Height="36"></RowDefinition>
                    <RowDefinition Height="36"></RowDefinition>
                    <RowDefinition Height="36"></RowDefinition>
                </Grid.RowDefinitions>
                <Grid x:Name="___No_Name_" Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" Grid.RowSpan="1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="45"></ColumnDefinition>
                        <ColumnDefinition Width="*"></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    <Label Content="Filter:" VerticalAlignment="Center"></Label>
                    <TextBox x:Name="FilterText" TextChanged="FilterText_TextChanged" Height="24" Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Stretch" Margin="0,0,10,0"></TextBox>
                </Grid>
                <ListView SelectionMode="Single" KeyUp="attributesTable_KeyUp" x:Name="attributesTable" Grid.Column="1" Grid.Row="1" Margin="10">
                    <ListView.View>
                        <GridView>
                            <GridViewColumn Header="Name"></GridViewColumn>
                            <GridViewColumn Header="Type"></GridViewColumn>
                        </GridView>
                    </ListView.View>
                </ListView>
                <ListBox SelectionChanged="LvObjectsViewer_SelectionChanged" x:Name="lvObjectsViewer" Grid.Column="0" Grid.Row="1" Margin="10">
                </ListBox>
                <StackPanel Orientation="Horizontal" Grid.Column="1" Grid.Row="2">
                    <Button Content="Add" Click="addAttributeBtn_Click" Width="72" Height="30" Margin="10,0,10,0"></Button>
                    <Button Content="Remove" Click="removeAttributeBtn_Click" Width="72" Height="30" Margin="0,0,10,0"></Button>
                </StackPanel>
                <Label Grid.Row="4" Grid.Column="1" Grid.ColumnSpan="1" x:Name="label1"></Label>
                <Button Click="btnRemoveEntries_Click" Content="Remove Checked Objects from Scene" Margin="10,3,10,3" Grid.Column="0" Grid.Row="2" HorizontalAlignment="Stretch"></Button>
                <StackPanel Grid.Row="3" Grid.ColumnSpan="2" Margin="10,0">
                    <TextBlock Foreground="Red" Text="RED means that the object is not listed in ethier the StageConfig or GameConfig"></TextBlock>
                    <TextBlock Foreground="YellowGreen" Text="GREEN means that the object is in the GameConfig"></TextBlock>
                </StackPanel>
                <CheckBox Checked="Checkbox_CheckChanged" Unchecked="Checkbox_CheckChanged" x:Name="rmvStgCfgCheckbox" Content="Remove Stage Config Entries for Selected Objects" Margin="10,3,10,3" Grid.Column="0" Grid.Row="4" HorizontalAlignment="Stretch" VerticalContentAlignment="Center"></CheckBox>
                <Button Click="btnCancel_Click" Content="Exit" Width="72" HorizontalAlignment="Right" Height="25" Grid.Column="1" Grid.Row="4" Margin="10,3,10,3"></Button>
            </Grid>

        </Grid>
    </Grid>
    <Window.Resources>
        <ResourceDictionary>
            <Style TargetType="{x:Type Image}">
                <Style.Triggers>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Opacity" Value="0.4" />
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style TargetType="{x:Type Label}">
                <Setter Property="Foreground" Value="{DynamicResource NormalText}" />
            </Style>
            <Style TargetType="{x:Type ComboBox}">
                <Style.Triggers>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Background" Value="{DynamicResource ToolbarBackground}" />
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="DisabledToggleButton" TargetType="{x:Type ToggleButton}">
                <Style.Triggers>
                    <Trigger Property="IsEnabled" Value="false">
                        <Setter Property="Foreground" Value="{DynamicResource DisabledText}"/>
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="true">
                        <Setter Property="Foreground" Value="{DynamicResource NormalText}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="Flat" x:Name="FlatToggleButtons" TargetType="{x:Type ToggleButton}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <Border HorizontalAlignment="Center" VerticalAlignment="Center" x:Name="border" Padding="5,0,5,0" BorderThickness="1,1,1,1" SnapsToDevicePixels="True">
                                <ContentPresenter x:Name="contentPresenter"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="true">
                                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource ContextMenuSelectedColor}"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Opacity" TargetName="border" Value="0.5"/>
                                    <Setter Property="Opacity" TargetName="contentPresenter" Value="0.5"/>
                                </Trigger>
                                <Trigger Property="Control.IsMouseOver" Value="true">
                                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource ContextMenuSelectedColor}"/>
                                    <Setter Property="Background" TargetName="border" Value="{DynamicResource ContextMenuSelectedColorBack}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style TargetType="{x:Type TextBox}">
                <Setter Property="Background" Value="{DynamicResource TextBoxBackground}"/>
                <Setter Property="Foreground" Value="{DynamicResource NormalText}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource ButtonBorder}"/>
            </Style>





            <Style x:Key="Flat2" x:Name="FlatButtons" TargetType="{x:Type Button}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border HorizontalAlignment="Center" VerticalAlignment="Center" x:Name="border" Padding="5,0,5,0" BorderThickness="1,1,1,1" SnapsToDevicePixels="True">
                                <ContentPresenter x:Name="contentPresenter"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Opacity" TargetName="border" Value="0.5"/>
                                    <Setter Property="Opacity" TargetName="contentPresenter" Value="0.5"/>
                                </Trigger>
                                <Trigger Property="Control.IsMouseOver" Value="true">
                                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource ContextMenuSelectedColor}"/>
                                    <Setter Property="Background" TargetName="border" Value="{DynamicResource ContextMenuSelectedColorBack}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <BorderGapMaskConverter x:Key="BorderGapMaskConverter"/>
            <Style TargetType="{x:Type GroupBox}">
                <Setter Property="BorderBrush" Value="{DynamicResource ButtonBorder}"/>
                <Setter Property="Margin" Value="4"></Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type GroupBox}">
                            <Grid SnapsToDevicePixels="true">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="6" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="6" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="6" />
                                </Grid.RowDefinitions>
                                <Border CornerRadius="4" Grid.Row="1" Grid.RowSpan="3" Grid.Column="0" Grid.ColumnSpan="4" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="Transparent" Background="{TemplateBinding Background}" />
                                <Border Name="Header" Padding="3,1,3,0" Grid.Row="0" Grid.RowSpan="2" Grid.Column="1">
                                    <ContentPresenter ContentSource="Header" RecognizesAccessKey="true" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </Border>
                                <ContentPresenter Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="2" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                <Border Grid.Row="1" Grid.RowSpan="3" Grid.ColumnSpan="4"  BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="0">
                                    <Border.OpacityMask>
                                        <MultiBinding Converter="{StaticResource BorderGapMaskConverter}" ConverterParameter="7">
                                            <Binding ElementName="Header" Path="ActualWidth" />
                                            <Binding Path="ActualWidth" RelativeSource="{RelativeSource Self}" />
                                            <Binding Path="ActualHeight" RelativeSource="{RelativeSource Self}" />
                                        </MultiBinding>
                                    </Border.OpacityMask>
                                </Border>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="RemoveMouseOverEffect" TargetType="Button">
                <Setter Property="OverridesDefaultStyle" Value="True"/>
                <Setter Property="Margin" Value="5"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Name="border" 
                            BorderThickness="1"
                            Padding="0,0" 
                            BorderBrush="Transparent" 
                            CornerRadius="0" 
                            Background="{TemplateBinding Background}">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="border" Property="BorderBrush" Value="Transparent" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </Window.Resources>
</Window>
