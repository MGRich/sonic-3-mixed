<Window x:Class="ManiacEditor.Interfaces.EditSceneSelectInfoWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ManiacEditor.Interfaces"
        xmlns:base="clr-namespace:ManiacEditor"
        mc:Ignorable="d"
        Title="Edit Scene Info" Height="213" Width="543.5" Loaded="EditSceneSelectInfoForm_Load" Background="{DynamicResource NormalBackground}" ResizeMode="NoResize" WindowStartupLocation="CenterOwner" ShowInTaskbar="False">
    <Grid Margin="7">
        <Grid.ColumnDefinitions>
            <ColumnDefinition></ColumnDefinition>
            <ColumnDefinition></ColumnDefinition>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition></RowDefinition>
            <RowDefinition></RowDefinition>
            <RowDefinition></RowDefinition>
            <RowDefinition></RowDefinition>
            <RowDefinition></RowDefinition>
        </Grid.RowDefinitions>
        <Grid Height="26" Grid.ColumnSpan="1" Grid.RowSpan="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="4*"/>
                <ColumnDefinition Width="9*"/>
            </Grid.ColumnDefinitions>
            <Label x:Name="label1" HorizontalContentAlignment="Left" Content="Name:"></Label>
            <TextBox TextChanged="TextBox1_TextChanged" x:Name="textBox1" Grid.Column="1" VerticalContentAlignment="Center"></TextBox>
        </Grid>
        <Grid Height="26" Grid.Row="1" Grid.ColumnSpan="1" Grid.RowSpan="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="4*"/>
                <ColumnDefinition Width="9*"/>
            </Grid.ColumnDefinitions>
            <Label x:Name="label2" HorizontalContentAlignment="Left" Content="Zone:"></Label>
            <TextBox TextChanged="TextBox1_TextChanged" x:Name="textBox2" Grid.Column="1" VerticalContentAlignment="Center"></TextBox>
        </Grid>
        <Grid Height="26" Grid.Row="2" Grid.ColumnSpan="1" Grid.RowSpan="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="4*"/>
                <ColumnDefinition Width="9*"/>
            </Grid.ColumnDefinitions>
            <Label x:Name="label3" HorizontalContentAlignment="Left" Content="Scene ID:"></Label>
            <TextBox TextChanged="TextBox1_TextChanged" x:Name="textBox3" Grid.Column="1" VerticalContentAlignment="Center"></TextBox>
        </Grid>
        <Grid Height="26" Grid.Row="3" Grid.ColumnSpan="1" Grid.RowSpan="1">
            <Label x:Name="positionIDLabel" HorizontalContentAlignment="Left" Content="Stage ID:"></Label>
        </Grid>
        <Grid Height="26" Grid.Row="4" Grid.ColumnSpan="1" Grid.RowSpan="1">
            <Label x:Name="label4" HorizontalContentAlignment="Left"></Label>
        </Grid>
        <GroupBox Grid.Column="1" Grid.RowSpan="3" Header="Filter" Foreground="{DynamicResource NormalText}">
            <Grid Margin="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition></ColumnDefinition>
                    <ColumnDefinition></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition></RowDefinition>
                    <RowDefinition></RowDefinition>
                    <RowDefinition></RowDefinition>
                </Grid.RowDefinitions>
                <CheckBox x:Name="checkBox1" Content="Common" Grid.Row="1" Grid.Column="0"></CheckBox>
                <CheckBox x:Name="checkBox2" Content="Mania Mode" Grid.Row="0" Grid.Column="0"></CheckBox>
                <CheckBox x:Name="checkBox3" Content="Encore Mode" Grid.Row="0" Grid.Column="1"></CheckBox>
            </Grid>
        </GroupBox>
        <StackPanel Grid.Column="1" Grid.Row="3" Grid.RowSpan="2" Orientation="Horizontal" HorizontalAlignment="Right" Margin="0,0,4,0">
            <Button x:Name="button1" Click="button1_Click" Content="Save" Width="75" Height="23" Margin="4"></Button>
            <Button x:Name="button2" Click="button2_Click" Content="Cancel" Width="75" Height="23"></Button>
        </StackPanel>
    </Grid>
    <Window.Resources>
        <ResourceDictionary>
            <Style TargetType="{x:Type Image}">
                <Style.Triggers>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Opacity" Value="0.4" />
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style TargetType="{x:Type Label}">
                <Setter Property="Foreground" Value="{DynamicResource NormalText}" />
            </Style>
            <Style TargetType="{x:Type ComboBox}">
                <Style.Triggers>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Background" Value="{DynamicResource ToolbarBackground}" />
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="DisabledToggleButton" TargetType="{x:Type ToggleButton}">
                <Style.Triggers>
                    <Trigger Property="IsEnabled" Value="false">
                        <Setter Property="Foreground" Value="{DynamicResource DisabledText}"/>
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="true">
                        <Setter Property="Foreground" Value="{DynamicResource NormalText}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="Flat" x:Name="FlatToggleButtons" TargetType="{x:Type ToggleButton}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <Border HorizontalAlignment="Center" VerticalAlignment="Center" x:Name="border" Padding="5,0,5,0" BorderThickness="1,1,1,1" SnapsToDevicePixels="True">
                                <ContentPresenter x:Name="contentPresenter"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="true">
                                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource ContextMenuSelectedColor}"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Opacity" TargetName="border" Value="0.5"/>
                                    <Setter Property="Opacity" TargetName="contentPresenter" Value="0.5"/>
                                </Trigger>
                                <Trigger Property="Control.IsMouseOver" Value="true">
                                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource ContextMenuSelectedColor}"/>
                                    <Setter Property="Background" TargetName="border" Value="{DynamicResource ContextMenuSelectedColorBack}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style TargetType="{x:Type TextBox}">
                <Setter Property="Background" Value="{DynamicResource TextBoxBackground}"/>
                <Setter Property="Foreground" Value="{DynamicResource NormalText}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource ButtonBorder}"/>
            </Style>
            <Style TargetType="{x:Type Button}">
                <Setter Property="Background" Value="{DynamicResource ButtonBackground}"/>
                <Setter Property="Foreground" Value="{DynamicResource NormalText}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource ButtonBorder}"/>
            </Style>
            <Style TargetType="{x:Type ListBox}">
                <Setter Property="Background" Value="{DynamicResource TextBoxBackground}"/>
                <Setter Property="Foreground" Value="{DynamicResource NormalText}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource ButtonBorder}"/>
            </Style>


            <Style x:Key="Flat2" x:Name="FlatButtons" TargetType="{x:Type Button}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border HorizontalAlignment="Center" VerticalAlignment="Center" x:Name="border" Padding="5,0,5,0" BorderThickness="1,1,1,1" SnapsToDevicePixels="True">
                                <ContentPresenter x:Name="contentPresenter"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Opacity" TargetName="border" Value="0.5"/>
                                    <Setter Property="Opacity" TargetName="contentPresenter" Value="0.5"/>
                                </Trigger>
                                <Trigger Property="Control.IsMouseOver" Value="true">
                                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource ContextMenuSelectedColor}"/>
                                    <Setter Property="Background" TargetName="border" Value="{DynamicResource ContextMenuSelectedColorBack}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <BorderGapMaskConverter x:Key="BorderGapMaskConverter"/>
            <Style TargetType="{x:Type GroupBox}">
                <Setter Property="BorderBrush" Value="{DynamicResource ButtonBorder}"/>
                <Setter Property="Margin" Value="4"></Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type GroupBox}">
                            <Grid SnapsToDevicePixels="true">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="6" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="6" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="6" />
                                </Grid.RowDefinitions>
                                <Border CornerRadius="4" Grid.Row="1" Grid.RowSpan="3" Grid.Column="0" Grid.ColumnSpan="4" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="Transparent" Background="{TemplateBinding Background}" />
                                <Border Name="Header" Padding="3,1,3,0" Grid.Row="0" Grid.RowSpan="2" Grid.Column="1">
                                    <ContentPresenter ContentSource="Header" RecognizesAccessKey="true" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </Border>
                                <ContentPresenter Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="2" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                <Border Grid.Row="1" Grid.RowSpan="3" Grid.ColumnSpan="4"  BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="0">
                                    <Border.OpacityMask>
                                        <MultiBinding Converter="{StaticResource BorderGapMaskConverter}" ConverterParameter="7">
                                            <Binding ElementName="Header" Path="ActualWidth" />
                                            <Binding Path="ActualWidth" RelativeSource="{RelativeSource Self}" />
                                            <Binding Path="ActualHeight" RelativeSource="{RelativeSource Self}" />
                                        </MultiBinding>
                                    </Border.OpacityMask>
                                </Border>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="RemoveMouseOverEffect" TargetType="Button">
                <Setter Property="OverridesDefaultStyle" Value="True"/>
                <Setter Property="Margin" Value="5"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Name="border" 
                            BorderThickness="1"
                            Padding="0,0" 
                            BorderBrush="Transparent" 
                            CornerRadius="0" 
                            Background="{TemplateBinding Background}">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="border" Property="BorderBrush" Value="Transparent" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </Window.Resources>

</Window>
