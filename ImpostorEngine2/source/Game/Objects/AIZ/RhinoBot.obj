object 0x8D;

subclass Enemy;

event Create() {
    Active = true;
    Priority = false;

    W = 32;
    H = 32;

    Frame = 0;
    var SubX:int = X << 16;
    var Speed:int = 0;
    var Acceleration:int = -0x10;

    HitCount = 1;

    Scene.AddSelfToRegistry(this, "Enemies");
}

event Update() {
    local DisX:int = 0;
    local DisY:int = 0;

    if (Speed == Math.sign(Acceleration) * 0x300) {
        Acceleration = -Acceleration;
        //Sound.Play(0x48);
    }

    if (Speed == 0 && Timer == -1 && Math.abs(Speed) < 0x400) {
        FlipX = !FlipX;
        if (FlipX)
            Acceleration = -0x10;
        else
            Acceleration = 0x10;
    }

    Speed += Acceleration;
    SubX += Speed << 8;
    X = SubX >> 16;

    if (Timer == -1 && Math.abs(Speed) < 0x400) {
        if (Math.sign(Speed) == Math.sign(Acceleration)) {
            Frame = 0;
            if (Math.abs(Speed) < 0x80) {
                Frame = 3;
            }
            if (Math.abs(Speed) < 0x40) {
                Frame = 1;
            }
        }
        else {
            // for 7 frames, looks like this
            Frame = 1;
            // for 40 looks like this
            if (Math.abs(Speed) < 0x280) {
                Frame = 2;
            }
        }

        for (p:int = 0; p < Scene.PlayerCount; p++) {
            DisX = (Scene.Players[p].EZX - X) * Math.sign(Speed);
            DisY = Math.abs(Scene.Players[p].EZY - Y);
            if (DisX < 96 && DisX > 0 && DisY <= 32) {
                Timer = 24;
                Speed = 0;
                Acceleration = 0;
                Frame = 0;
            }
        }
    }

    if (Timer == 0) {
        if (FlipX)
            Speed = -0x400;
        else
            Speed = 0x400;
        Frame = 0;
        Priority = true;
    }

    local Y1:int = Y;
    local Y2:int = Y;
    for (y:int = Y + 8; y < Y + 32; y++) {
        if (Scene.CollisionAt(X - 8, y)) {
            Y1 = y;
            break;
        }
    }
    for (y:int = Y + 8; y < Y + 32; y++) {
        if (Scene.CollisionAt(X + 8, y)) {
            Y2 = y;
            break;
        }
    }

    if (Y1 < Y2 && Y1 > Y + 8) {
        Y = Y1 - 16;
    }
    else if (Y2 > Y + 8) {
        Y = Y2 - 16;
    }

    if (Y1 >= Y + 30 || Y1 == Y || Scene.CollisionAt(X - 8 - 1, Y)) {
        Acceleration = 0x10;
        Speed = 0x10;
        Timer = -1;
        SubX += 0x10000;
        FlipX = false;

        Priority = false;

        while (!Scene.CollisionAt((SubX >> 16) - 8 - 1, Y + 20))
            SubX += 0x10000;

        X = (SubX >> 16);
    }
    if (Y2 >= Y + 30 || Y2 == Y || Scene.CollisionAt(X + 8 + 1, Y)) {
        Acceleration = -0x10;
        Speed = -0x10;
        Timer = -1;
        SubX -= 0x10000;
        FlipX = true;

        Priority = false;

        while (!Scene.CollisionAt((SubX >> 16) + 8 + 1, Y + 20))
            SubX -= 0x10000;

        X = (SubX >> 16);
    }

    if (Timer >= 0)
        Timer--;
}

event Render(CamX:int, CamY:int) {
    local Flip:int = 1;
    if (FlipX)
        Flip = -1;

    if (Frame == 3)
        Flip = -Flip;
    G.DrawSprite(Sprite, 23 + 1, Frame, X - CamX, Y - CamY, 0, Flip > 0);
    if (Frame == 2)
        G.DrawSprite(Sprite, 23 + 2, ((Scene.Frame / 3) & 3), X - CamX + Flip * 14, Y - CamY + 1, 0, Flip > 0);
    if (Timer != -1)
        G.DrawSprite(Sprite, 23 + 2, ((Scene.Frame / 3) & 3), X - CamX, Y - CamY + 1, 0, Flip > 0);
}
