var GoTimer:int;
var StoredX:int;
var StoredY:int;

event Create() {
    Active = false;
    Priority = true;
    DoDeform = false;

	BinIndex = LevelScene.LoadSpriteBin("Global/StarPost.bin",SaveGame.CurrentMode);

    W = 16;
    H = 16;
    Rotation = 0;

    Frame = 0;
	CurrentAnimation = Sprite.FindAnimation("Stars 1");
    CleanupInactiveObject = false;
}

event Update() {
	if (Active)
	{
		if (Timer > 0) Timer--;
		else Timer = 0;
	}
	else {
		Timer = 64;
	}
}

event DrawStar(Rock:int, Ang:int, Side:int, CamX:int, CamY:int) {
    var cosval:int = (Math.cosHex(Rock) * 16) >> 16;
    var xx:int = (cosval * Math.cosHex(Ang)) >> 16;
    var yy:int = (cosval * Math.sinHex(Ang)) >> 16;

    if (Math.sinHex(Rock) * Side >= 0) {
        G.DrawSprite(Sprite,
            Sprite.Animations[5].Frames[0].X,
            Sprite.Animations[5].Frames[0].Y,
            Sprite.Animations[5].Frames[0].W,
            Sprite.Animations[5].Frames[0].H,
            X - CamX + xx, Y - CamY + yy, 0,
            IE_NOFLIP,
            Sprite.Animations[5].Frames[0].OffX,
            Sprite.Animations[5].Frames[0].OffY);
    }
}

event Render(CamX:int, CamY:int) {
		if (Active)
		{
			
			
			//Draw Star
			G.DrawSprite(Sprite, CurrentAnimation, 0, this.X - CamX, (this.Y) - CamY, 0, IE_NOFLIP);
	
			if (App.viewObjectCollision) {
				G.SetDrawAlpha(0x80);
				G.DrawRectangle(X - (W / 2) - CamX, Y - (H / 2) - CamY, W, H, DrawCollisionsColor);
				G.SetDrawAlpha(0xFF);
			}
		}
}

event OnCollisionWithPlayer(PlayerID:int, HitFrom:int, Data:int) : int {
    if (PlayerID != 0) return 0;
	if (!Active) return 0;
	if (Timer != 0) return 0;

	if (Scene.Player.Rings > 20 && Scene.Player.Rings < 35) {
		Scene.NextBonusStage = 2;
	}
	else if (Scene.Player.Rings > 34 && Scene.Player.Rings < 50) {
		Scene.NextBonusStage = 1;
	}
	else if (Scene.Player.Rings >= 50) {
		Scene.NextBonusStage = 0;
	}
	else {
		return 0;
	}

    Scene.Player.ObjectControlled = 0xFF;
    Scene.Player.Hidden = true;
    Scene.StopTimer = true;
    GoTimer = 48;
    App.Audio.FadeMusic(1.0);

    Scene.SaveState();
	
	Scene.FadeAction = 5;

    Scene.FadeTimerMax = 48 + 48;
    Scene.FadeMax = 0x200;

    return 1;
}
