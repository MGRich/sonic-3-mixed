object 0x51;

event Create() {
    Active = true;
    Priority = true;

    SolidTop = true;
    Scene.AddSelfToRegistry(this, "Solid");

    Timer = 0;

    var LastX:int = X;
    var LastY:int = Y;
    var YS:int = 1 - (FlipX << 1);
    var Vertical:int = false;
    var RisingType:int = false;
    var Rising:int = false;
    var Moving:int = false;
    var SizeIndex:int = (SubType >> 4) & 0x7;
    var MoveType:int = (SubType & 0xF) - 0x8;
    var BackupX:int = X;
    var Amplitude:int = 0;


    if (SizeIndex == 0) {
        W = 64;
        H = 64;
    }
    else if (SizeIndex == 1) {
        W = 48;
        H = 24;
    }
    else if (SizeIndex == 2) {
        W = 64;
        H = 40;
    }

    if (MoveType > 0) {
        if (MoveType >= 4) {
            // 0x380 -> $42(a0)
            BackupX += 0x100;
        }
    }
    MoveType = (SubType & 0xF);

    if (MoveType == 1 || MoveType == 2) {
        Amplitude = 0x20 << MoveType;
    }
    else if (MoveType == 3 || MoveType == 4) {
        Amplitude = 0x08 << MoveType;
    }

    if (Scene.ZoneID == 1) {
        CurrentAnimation = 21;
        Frame = 0;
    }
    else if (Scene.ZoneID == 2) {
        CurrentAnimation = 14;
    }
}
event Update() {
    if (MoveType == 0) {
        if (CollidingWithPlayer) {
            if (Timer < 0x40)
                Timer += 0x4;
        }
        else {
            if (Timer > 0x00)
                Timer -= 0x4;
        }

        LastY = Y;
        Y = InitialY - (Math.sinHex(Timer) >> 14);
    }
    else if (MoveType == 1 || MoveType == 2) {
        LastX = X;

        if (FlipX)
            X = InitialX + Amplitude / 2 - (Math.sinHex(Scene.Frame) >> (12 - MoveType));
        else
            X = InitialX + Amplitude / 2 + (Math.sinHex(Scene.Frame) >> (12 - MoveType));

        XSpeed = (X - LastX) << 8;
    }
    else if (MoveType == 3 || MoveType == 4) {
        LastY = Y;

        if (!FlipX)
            Y = InitialY - Amplitude / 2 - (Math.sinHex(Scene.Frame) >> (14 - MoveType));
        else
            Y = InitialY - Amplitude / 2 + (Math.sinHex(Scene.Frame) >> (14 - MoveType));

        if (CollidingWithPlayer) {
            if (Scene.Player.Action != ActionType::Dead && Scene.Player.EZY < Y - H / 2) {
                if (Scene.CollisionAt(Scene.Player.EZX - 9, Scene.Player.EZY - Scene.Player.H / 2 - 2, NULL, 2, Scene.Player)) {
                    Scene.Player.Die(false);
                }
                if (Scene.CollisionAt(Scene.Player.EZX + 9, Scene.Player.EZY - Scene.Player.H / 2 - 2, NULL, 2, Scene.Player)) {
                    Scene.Player.Die(false);
                }
            }
        }
    }
    else if (MoveType == 5 || MoveType == 6) {
        LastX = X;
        LastY = Y;

        if (FlipX ^ (MoveType == 6))
            X = InitialX + 0x80 / 2 - (Math.sinHex(Scene.Frame) >> 10);
        else
            X = InitialX + 0x80 / 2 + (Math.sinHex(Scene.Frame) >> 10);

        if (!FlipX)
            Y = InitialY - 0x40 / 2 - (Math.sinHex(Scene.Frame) >> 11);
        else
            Y = InitialY - 0x40 / 2 + (Math.sinHex(Scene.Frame) >> 11);

        if (CollidingWithPlayer) {
            if (Scene.Player.Action != ActionType::Dead && Scene.Player.EZY < Y - H / 2) {
                if (Scene.CollisionAt(Scene.Player.EZX, Scene.Player.EZY - Scene.Player.H / 2 - 2, NULL, 2, Scene.Player)) {
                    Scene.Player.Die(false);
                }
            }
        }

        XSpeed = (X - LastX) << 8;
    }
    else if (MoveType == 7) {
        LastY = Y;
        if (Rising && Y > InitialY - 0x140) {
            Y -= 1;
        }

        if (CollidingWithPlayer) {
            if (Scene.Player.Action != ActionType::Dead && Scene.Player.EZY < Y - H / 2) {
                if (Scene.CollisionAt(Scene.Player.EZX - 9, Scene.Player.EZY - Scene.Player.H / 2 - 2, NULL, 2, Scene.Player)) {
                    Scene.Player.Die(false);
                }
                if (Scene.CollisionAt(Scene.Player.EZX + 9, Scene.Player.EZY - Scene.Player.H / 2 - 2, NULL, 2, Scene.Player)) {
                    Scene.Player.Die(false);
                }
            }
        }
    }

    if (Moving) {
        if (!RisingType) {
            LastX = X;

            if (Vertical)
                Y = InitialY - 32 * Math.abs(YS) + (Math.cosHex(Scene.Frame + 1) * 32 * YS >> 16);
            else
                X = InitialX + 32 * Math.abs(YS) + (Math.cosHex(Scene.Frame + 1) * 32 * YS >> 16);

            XSpeed = (X - LastX) << 8;
        }
        if (Rising && Y > InitialY - 0x140) {
            Y -= 1;
        }
    }
}
event Render(CamX:int, CamY:int) {
    local nX:int = X;
    local nY:int = Y;

    if (Moving) {
        if (!RisingType) {
            if (Vertical)
                nY = InitialY - 32 * Math.abs(YS) + (Math.cosHex(Scene.Frame + 0) * 32 * YS >> 16);
            else
                nX = InitialX + 32 * Math.abs(YS) + (Math.cosHex(Scene.Frame + 0) * 32 * YS >> 16);
        }
    }

    nX = LastX;
    nY = LastY;

    if (Scene.ZoneID == 1) {
        G.DrawSprite(Sprite, CurrentAnimation, 0, nX - CamX, nY - 2 - CamY, 0, IE_NOFLIP);
    }
    else if (Scene.ZoneID == 2) {
        G.DrawSprite(Sprite, CurrentAnimation, Frame >> 8, nX - CamX, nY - CamY, 0, IE_NOFLIP);
    }
    else if (Scene.ZoneID == 3) {
        G.DrawSprite(Sprite, 2, 0, nX - CamX, nY - 2 - CamY, 0, IE_NOFLIP);
    }
    else {
        G.DrawRectangle(nX - CamX - W / 2, nY - CamY - H / 2, W, H, 0xFF0000);
    }
}

event OnCollisionWithPlayer(PlayerID:int, HitFrom:int, Data:int) : int {
    if (HitFrom == 1 &&
        Scene.Players[PlayerID].EZY < Y &&
        Scene.Players[PlayerID].YSpeed >= 0 &&
        Scene.Players[PlayerID].Ground && MoveType == 7) {
        Rising = true;
        return true;
    }

    if (MoveType == 0 && !(Scene.Players[PlayerID].Ground && HitFrom == 1)) return false;
    if (MoveType == 7 && !(Scene.Players[PlayerID].Ground && HitFrom == 1)) return false;

	return true;
}
