object 0x08;

event Create() {
    Active = true;
    Priority = false;

    Solid = true;
    Scene.AddSelfToRegistry(this, "Solid");

    var Rotation:int = 0;
    var Size:int = 1 + (SubType & 0x30) / 0x10;
    W = 32 * Size;
    H = 32;

    Y = InitialY;

    var Vertical:int = (SubType >> 6) & 0x1;
    if (Vertical && FlipX) {
        W = 32;
        H = 32 * Size;
        Rotation = 0x40;
    }
    if (Vertical && !FlipX) {
        W = 32;
        H = 32 * Size;
        Rotation = 0xC0;
    }
    if (!Vertical && FlipY) {
        W = 32 * Size;
        H = 32;
        Rotation = 0x80;
    }

    if ((SubType & 0xF) == 0x1) {
        if (FlipY) {
            Y += 32;
        }
    }

    var In:bool = false;
    if (!((SubType & 0xF) == 0x1 || (SubType & 0xF) == 0x2))
        In = true;

    CurrentAnimation = 6;
}
event Update() {
    if ((SubType & 0xF) == 0x1 || (SubType & 0xF) == 0x2) {
        Timer++;
        Timer &= 0x3F;

        if (Timer >= 60) {
            if (Timer == 60) In = !In;

            if (In) {
                X += Math.sinHex(Rotation) >> 13;
                Y += Math.cosHex(Rotation) >> 13;
            }
            else {
                X -= Math.sinHex(Rotation) >> 13;
                Y -= Math.cosHex(Rotation) >> 13;
            }
        }
    }
}
event Render(CamX:int, CamY:int) {
    var flag:int = IE_NOFLIP;
    if (Rotation == 270)
        flag = IE_FLIPX;

    for (local i:int = 0; i < Size; i++) {
        if (Vertical)
            G.DrawSprite(Sprite, CurrentAnimation, Frame >> 8, X - CamX, Y - CamY - (Size - 1) * 16 + i * 32, Rotation, flag);
        else
            G.DrawSprite(Sprite, CurrentAnimation, Frame >> 8, X - CamX - (Size - 1) * 16 + i * 32, Y - CamY, Rotation, flag);
    }
}

event OnCollisionWithPlayer(PlayerID:int, HitFrom:int, Data:int) : int {
    if (HitFrom == 1 && Rotation == 0 && Scene.Players[PlayerID].YSpeed >= 0) {
        Scene.Players[PlayerID].Hurt(X, true);
    }
    else if (HitFrom == 3 && Rotation == 180 && Scene.Players[PlayerID].YSpeed <= 0 && !In && ((SubType & 0xF) == 0x1 || (SubType & 0xF) == 0x2)) {
        Scene.Players[PlayerID].Hurt(X, true);
    }
    else if (HitFrom == 3 && Rotation == 180 && Scene.Players[PlayerID].YSpeed <= 0 && In && !((SubType & 0xF) == 0x1 || (SubType & 0xF) == 0x2)) {
        Scene.Players[PlayerID].Hurt(X, true);
        Scene.Players[PlayerID].EZY += 6;
    }
    else if ((Rotation == 90 && HitFrom == 2) || (Rotation == 270 && HitFrom == 0)) {
        if (Scene.Players[PlayerID].EZY + 20 - 4 - 4 <= Y - 16)
            return 0;

        Scene.Players[PlayerID].Hurt(X, true);
    }
    return 1;
}
