object 0xB4;

var RingAnimation:int;
var Break:bool;
var Trigger:Object;
var VisualCircle:int;
var Pivot:int;
var Player:IPlayer;

event Create() {
    CurrentAnimation = Sprite.FindAnimation("Swinging Platform");
    RingAnimation = Sprite.FindAnimation("Ring");
    W = 64;
    H = 16;
    Solid = true;
    VisualLayer = 1;
    Scene.AddSelfToRegistry(this, "Solid");
    Break = SubType == 2 ? true : false;
    Trigger = Scene.AddNewObject(Obj_SwingingPlatformTrigger, 0, X, Y, FlipX, false);
    Trigger.Parent = this;
    Y += 8;
    Pivot = 0x84;
}

event Update() {
    if (!Trigger) return;
    SubType = SubType == 0 ? 0 : SubType - 1;
    VisualCircle = SubType > 90 ? 90 : SubType;
    X = ((Math.sinHex(VisualCircle) * 0x50) >> 16) + InitialX;
    IApp.Print(0, "%d %d", VisualCircle, ((Math.sinHex(VisualCircle) * 0x50) >> 16));
	//Y = ((Math.cosHex(VisualCircle) * 0x50) >> 16) + Pivot;
    Trigger.X = X + (FlipX ? -28 : 28);
    Trigger.Y = Y - 16;
}

event Render(CamX:int, CamY:int) {
    G.DrawSprite(Sprite, CurrentAnimation, Frame, X - CamX, Y - 8 - CamY, 0, FlipX ? IE_FLIPX : IE_NOFLIP);

    G.DrawSprite(Sprite, RingAnimation, 0, InitialX - CamX, InitialY - Pivot - CamY, 0, IE_NOFLIP);
}

event OnCollisionWithPlayer(PlayerID:int, HitFrom:int, Data:int) : int {
    Player = Scene.Players[PlayerID];
    if (Player.GroundSpeed <= 0x10 || !Player.Ground || SubType != 0) return 0;
    IApp.Print(0, "%d", Player.GroundSpeed / 2); 
    SubType = Player.GroundSpeed / 2;
    return 1;
}