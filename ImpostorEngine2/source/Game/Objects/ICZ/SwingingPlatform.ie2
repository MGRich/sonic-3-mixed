object 0xB4;

var RingAnimation:int;
var Break:bool;
var Trigger:Object;
var VisualCircle:int;
var Pivot:int;

event Create() {
    CurrentAnimation = Sprite.FindAnimation("Swinging Platform");
    RingAnimation = Sprite.FindAnimation("Ring");
    W = 64;
    H = 16;
    Solid = true;
    VisualLayer = 1;
    Scene.AddSelfToRegistry(this, "Solid");
    Break = SubType == 2 ? true : false;
    Trigger = Scene.AddNewObject(Obj_SwingingPlatformTrigger, 0, X, Y, FlipX, false);
    Trigger.Parent = this;
    Y += 8;
    Pivot = 0x84;
}

event Update() {
    if (!Trigger) return;
    SubType = SubType == 0 ? 0 : SubType - 1;
    VisualCircle = SubType > 180 ? 180 : SubType;
    X = sin(VisualCircle) * 0x50 + InitialX;
    IApp.Print(0, "%d %d", VisualCircle, sin(VisualCircle));
	Y = /*cos(VisualCircle) + Pivot*/ Y;
    Trigger.X = X + (FlipX ? -28 : 28);
    Trigger.Y = Y - 16;
}

event Render(CamX:int, CamY:int) {
    G.DrawSprite(Sprite, CurrentAnimation, Frame, X - CamX, Y - 8 - CamY, 0, FlipX ? IE_FLIPX : IE_NOFLIP);

    G.DrawSprite(Sprite, RingAnimation, 0, InitialX - CamX, InitialY - Pivot - CamY, 0, IE_NOFLIP);
}