object 0xAE;

subclass Enemy;

var Orbs:Object[4];
var OrbOffsets:float[4];

var RotAngle:float;
var TurnSpeed:float;

event Create() {
    Active = true;
    Priority = false;

    W = 32;
    H = 32;

    CurrentAnimation = Sprite.FindAnimation("Star Pointer");

	for (var i:int = 0; i < 4; i++) {
        Orbs[i] = Scene.AddNewObject(Obj_StarPointerOrbs, i, X, Y, FlipX, false);
		Orbs[i].CurrentAnimation = CurrentAnimation;
		OrbOffsets[i] = i * 90;
		IApp.Print(0, "%d %d", OrbOffsets[i], i);
	}	
	
	RotAngle = 0;
	TurnSpeed = 0.01;
}

event Update() {	
	for (var i:int = 0; i < 4; i++) {
		RotAngle = 0;
		RotAngle += OrbOffsets[i];
		RotAngle += TurnSpeed; 
		Orbs[i].X = sin(RotAngle)*20 + X;
		Orbs[i].Y = cos(RotAngle)*20 + Y;
		OrbOffsets[i] = RotAngle;
	}		
	X -= 0.01;		
}

event Render(CamX:int, CamY:int) {
	if (DrawCollisions) {
		G.DrawRectangle(X - CamX, Y - CamY, W, H, DrawCollisionsColor);
	} else {
        G.DrawSprite(this.Sprite, CurrentAnimation, Frame >> 8, this.X - CamX, this.Y - CamY, 0, this.FlipX ? IE_FLIPX : IE_NOFLIP);
    }
}