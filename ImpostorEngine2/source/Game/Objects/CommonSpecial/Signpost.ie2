//Fuck this object - Ducky
//btw the signpost doesn't show the right side and idk how to work that :)

var SpinSpeed:int;
var Rot:int;
var Falling:bool;

//ok fuck this I'm cheating
var StartResults:bool;

event Create() {
    W = 48;
    H = 24;
    Active = true;
    Priority = true;

    CurrentAnimation = int(Scene.Players[0].Character);
    
    CleanupInactiveObject = true;

    XSpeed = 0;
    YSpeed = 0;
    Frame = 0x00;

    SpinSpeed = 0x400;
    Rot = 0;

    Falling = true;
	StartResults = false;
	
    Timer = -1;
}

event Update() {
    SpinSpeed = SpinSpeed <= 0x400 ? 0x400 : SpinSpeed - 0x20;
	if (!isHeldDebugObject)
	{
		    if (Falling)
        Gravity = 0xC;
    else
        Scene.Player.UnderwaterTimer = 1800;

	if (X + 24 >= Scene.CameraX + App.WIDTH || X - 24 <= Scene.CameraX) {
		if (Falling) {		
			XSpeed = -XSpeed;
		}
	}

    for (var i:int = -16; i <= 8; i++) {
        if (Scene.CollisionAt(X, Y + 24 + i) || Y + 24 + i >= Scene.CameraY + App.HEIGHT) {
            if (Falling) {
				XSpeed = 0;
				YSpeed = 0;
                Falling = false;
                Timer = 0x48;
				Gravity = 0;

				Y += i;
				break;
            }
        }
    }

    Rot += SpinSpeed;

    if (Timer > 0)
        Timer--;

	if (((Rot >> 8) & 0xFF) == 0x80 && Timer == 0) {
		StartResults = true;
		Timer = -1;
	}

    // After 72 frames, or really just when the sign stops spinning
    if (StartResults) {
        SpinSpeed = 0;
		XSpeed = 0;
		YSpeed = 0;
				
        // Fade out level music
        App.Audio.RemoveMusic(Sound.SoundBank[0xFD]);
        Scene.DoResults();
        Timer = -1;
		StartResults = false;
    }
	}
}

event Render(CamX:int, CamY:int) {
    var c:int = 0;
    var s:int = 0;
    var x:int = 0;
    var w:int = 0;
    Sprite = Scene.Objects2Sprite;

    G.DrawSprite(Sprite, 6, 2, X - CamX, Y - CamY, 0, IE_NOFLIP);

    c = Math.cosHex(Rot >> 8);
    s = Math.sinHex(Rot >> 8);

    // Side
    x =  (24 * c >> 16) + (-4 * s >> 16);
    w =  (24 * c >> 16) + (4 * s >> 16);
    if (w - x > 0)
    G.DrawSpriteSized(Sprite, 6, 1,
        X - CamX + x + 4,
        Y - CamY + 22 + Sprite.Animations[6].Frames[1].OffY,
        0, IE_NOFLIP, w - x, 30);

    // Side
    x =  (-24 * c >> 16) + (4 * s >> 16);
    w =  (-24 * c >> 16) + (-4 * s >> 16);
    if (w - x > 0)
    G.DrawSpriteSized(Sprite, 6, 1,
        X - CamX + x + 4,
        Y - CamY + 22 + Sprite.Animations[6].Frames[1].OffY,
        0, IE_NOFLIP, w - x, 30);

    // Front
    x =  (24 * c >> 16) + (4 * s >> 16);
    w =  (-24 * c >> 16) + (4 * s >> 16);
    if (w - x > 0)
    G.DrawSpriteSized(Sprite, CurrentAnimation, Frame >> 8,
        X - CamX + x + 24,
        Y - CamY + 22 + Sprite.Animations[CurrentAnimation].Frames[Frame >> 8].OffY,
        0, IE_NOFLIP, w - x, 30);

    // Back
    x =  (-24 * c >> 16) + (-4 * s >> 16);
    w =  (24 * c >> 16) + (-4 * s >> 16);
    if (w - x > 0)
    G.DrawSpriteSized(Sprite, 5, Frame >> 8,
        X - CamX + x + 24,
        Y - CamY + 22 + Sprite.Animations[5].Frames[Frame >> 8].OffY,
        0, IE_NOFLIP, w - x, 30);
		
			if (App.viewObjectCollision) {
		G.SetDrawAlpha(0x80);
		G.DrawRectangle(X - (W / 2) - CamX, Y - (H / 2) - CamY, W, H, DrawCollisionsColor);
		G.SetDrawAlpha(0xFF);
	}
}

event OnCollisionWithPlayer(PlayerID:int, HitFrom:int, Data:int) : int {
    if (Scene.Players[PlayerID].Action != ActionType.Jumping)
        return 0;
    if (Scene.Players[PlayerID].YSpeed > 0)
        return 0;
    if (YSpeed < 0)
        return 0;

    if (Falling) {
		YSpeed = -0x200;
		XSpeed = Scene.Players[PlayerID].XSpeed;
		Scene.Score+=100;
	}
	SpinSpeed = 0x800;
    return 1;
}
